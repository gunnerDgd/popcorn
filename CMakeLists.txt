project(popcorn)
if     (PRESET_ARCH_X86_64)
    add_compile_definitions(PRESET_ARCH_X86_64)
    add_compile_definitions(PRESET_ARCH_BIT=64)
    add_compile_definitions(PRESET_ARCH_ENDIAN_LITTLE)

    set(PRESET_ARCH_ENDIAN_LITTLE on)
    set(PRESET_ARCH_ENDIAN_BIG    off)

    set(PRESET_ARCH_X86_64 on)
    set(PRESET_ARCH_BIT 64)
elseif (PRESET_ARCH_X86)
    add_compile_definitions(PRESET_ARCH_X86)
    add_compile_definitions(PRESET_ARCH_BIT=32)
    add_compile_definitions(PRESET_ARCH_ENDIAN_LITTLE)

    set(PRESET_ARCH_ENDIAN_LITTLE on)
    set(PRESET_ARCH_ENDIAN_BIG    off)

    set(PRESET_ARCH_X86 on)
    set(PRESET_ARCH_BIT 32)
endif()

if     ("${CMAKE_C_COMPILER_ID}" MATCHES  "Clang")
    add_compile_definitions(PRESET_COMPILER_CLANG)
    add_compile_definitions(PRESET_CALL_SYSV)

    set(PRESET_COMPILER_CLANG on)
    set(PRESET_CALL_SYSV      on)
elseif ("${CMAKE_C_COMPILER_ID}" STREQUAL "GNU")
    add_compile_definitions(PRESET_COMPILER_GCC)
    add_compile_definitions(PRESET_CALL_SYSV)

    set(PRESET_COMPILER_GCC on)
    set(PRESET_CALL_SYSV    on)
elseif ("${CMAKE_C_COMPILER_ID}" STREQUAL "Intel")
    add_compile_definitions(PRESET_COMPILER_INTEL)
    add_compile_definitions(PRESET_CALL_SYSV)

    set(PRESET_COMPILER_INTEL on)
    set(PRESET_CALL_SYSV      on)
elseif ("${CMAKE_C_COMPILER_ID}" STREQUAL "MSVC")
    add_compile_definitions(PRESET_COMPILER_MSVC)
    add_compile_definitions(PRESET_CALL_VECTORCALL)

    set(PRESET_COMPILER_MSVC   on)
    set(PRESET_CALL_VECTORCALL on)
endif()

if    (WIN32)
    add_compile_definitions(PRESET_WIN32)
    set(PRESET_WIN32 on)
elseif(UNIX AND NOT APPLE)
    add_compile_definitions(PRESET_LINUX)
    set                    (PRESET_LINUX on)
    include_directories    (/usr/src/linux-headers-${CMAKE_HOST_SYSTEM_VERSION}/include)
    include_directories    (/usr/src/kernels/${CMAKE_HOST_SYSTEM_VERSION}/include)
endif ()

if     (PRESET_WIN32)
elseif (PRESET_LINUX)
    file  (REMOVE ${CMAKE_SOURCE_DIR}/Makefile)
    if    (NOT DEFINED popcorn-dir)
        #message(FATAL_ERROR "No Relative Directory of Popcorn Source Defined.")
    endif()
    if    (NOT DEFINED popcorn-target-dir)
        #message(FATAL_ERROR "No Relative Directory of Popcorn Target Defined.")
    endif()
    if    (NOT DEFINED popcorn-target)
        #message(FATAL_ERROR "No Target Source Defined.")
    endif ()
    if    (NOT DEFINED popcorn-target-name)
        #message(FATAL_ERROR "No Target Defined for Popcorn Integration.\nPlease Define a target and call add_subdirectory.")
    elseif()
        file (APPEND ${CMAKE_SOURCE_DIR}/Makefile "obj-m        += ${popcorn-target-name}.o popcorn.o popcorn-dev.o\n")
    endif ()
endif ()

add_subdirectory(include)
add_subdirectory(src)

if    (PRESET_LINUX)
    add_subdirectory(linux)
endif ()

if (PRESET_LINUX)
    file               (APPEND ${CMAKE_SOURCE_DIR}/Makefile "${popcorn-target-name}-objs :=\\\n")
    foreach            (src ${popcorn-target})
        string (FIND ${src} ".h" src-type REVERSE)
        if     (NOT src-type EQUAL -1)
            continue()
        endif()
        string(PREPEND src "${popcorn-target-dir}/")
        string(REPLACE ".c" ".o" src ${src})
        file  (APPEND  ${CMAKE_SOURCE_DIR}/Makefile "\t${src}\\\n")
    endforeach ()
    file   (APPEND  ${CMAKE_SOURCE_DIR}/Makefile "\n")
    file   (APPEND ${CMAKE_SOURCE_DIR}/Makefile "all:\n")
    file   (APPEND ${CMAKE_SOURCE_DIR}/Makefile "\t$(MAKE) KCPPFLAGS=\"")
    if     (PRESET_ARCH_X86_64)
        file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "-DPRESET_LINUX ")
        file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "-DPRESET_ARCH_X86_64 ")
        file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "-DPRESET_ARCH_BIT=64 ")
        file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "-DPRESET_ARCH_ENDIAN_LITTLE\" ")
    elseif (PRESET_ARCH_X86)
        file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "-DPRESET_ARCH_X86 ")
        file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "-DPRESET_ARCH_BIT=32 ")
        file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "-DPRESET_ARCH_ENDIAN_LITTLE\" ")
    endif  ()
    file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "-C /lib/modules/${CMAKE_HOST_SYSTEM_VERSION}/build ")
    file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "M=${CMAKE_SOURCE_DIR} ")
    file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "modules\n\n")

    file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "clean:\n")
    file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "\t$(MAKE) ")
    file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "-C /lib/modules/${CMAKE_HOST_SYSTEM_VERSION}/build ")
    file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "M=${CMAKE_SOURCE_DIR} ")
    file(APPEND ${CMAKE_SOURCE_DIR}/Makefile "clean\n")

    add_custom_command                                 (
        OUTPUT            ${popcorn-target-name}.ko
        COMMAND           make all
        WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
        DEPENDS           ${CMAKE_SOURCE_DIR}/Makefile
        VERBATIM)
    add_custom_target(module       DEPENDS po.ko)
    add_custom_target(module-clean COMMAND make -C ${CMAKE_SOURCE_DIR} clean)
endif  ()

